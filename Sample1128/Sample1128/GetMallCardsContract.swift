//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** カード契約情報照会要求を行います。
 <B>制約</B>
 ・特になし
 <details>
 <summary>変更履歴</summary>
 2020.5.15 モールAPI化 新規作成
 2020.5.28 モールAPI化 HTTPステータスコード400に記載していたapigeeからのエラーコードについては、別紙を参照するように記載を変更
 2020.06.04 TWサーバ処理にてレスポンスコード400を返却する場合があるため、レスポンスに追加
 2020.07.01 レスポンス項目の決済口座番号と決済口座名義人の設定値を修正(決済口座番号：口座番号下７桁＋ブランク１桁    口座番号下７桁＋’ 1’　⇒　項目返却する場合はアスタリスクでマスク、決済口座名義人：記載なし　⇒　項目返却する場合はアスタリスクでマスク)</details> */
// sourcery: AutoInit
struct GetMallCardsContract {
    /** B01 */
    var b01: B01?
    /** B02 */
    var b02: [B02]?
    /** B03 */
    var b03: B03?
    /** メッセージ(結果コードに紐付くメッセージ) */
    var message: String?
    /** 結果コード */
    var result: String?

    /** B01 */
    struct B01 {
        /** カード枚数 */
        var cardCnt: Int?
    }

    struct B02 {
        /** ボーナス払い極度 */
        var bnsPayMax: Int?
        /** ボーナス払い利用可能額 */
        var bnsPayRiyoKanoGaku: Int?
        /** ボーナス払い残高 */
        var bnsPayZndk: Int?
        /** カードコード */
        var cardCd: String?
        /** カード名称 */
        var cardNm: String?
        /** カード有効期限(yyyymm) */
        var cardYukTrm: String?
        /** カードローンボーナス月１(書式：mm(月)) */
        var clBnsMon1: String?
        /** カードローンボーナス月2(書式：mm(月)) */
        var clBnsMon2: String?
        /** カードローンボーナス返済額 */
        var clBnsRepayGaku: Int?
        /** カードローン利率(書式：ZZ9.9999) */
        var clIntrt: Int?
        /** カードローン極度 */
        var clMax: Int?
        /** カードローン返済方式名称 */
        var clRepaymtdnm: String?
        /** カードローン利用可能額 */
        var clRiyoKanoGaku: Int?
        /** カードローン残高 */
        var clZndk: Int?
        /** カード会員番号 下4桁 */
        var crdKaiinNo4f: String?
        /** キャッシング利率(書式：ZZ9.9999) */
        var csIntrt: Int?
        /** キャッシング極度 */
        var csMax: Int?
        /** キャッシング利用可能額 */
        var csRiyoKanoGaku: Int?
        /** キャッシング残高 */
        var csZndk: Int?
        /** 審査結果(Space以外：会員情報取得エラー) */
        var exarslt: String?
        /** 海外キャッシング極度 */
        var foreignCsMax: Int?
        /** 海外キャッシング利用可能額 */
        var foreignCsRiyoKanoGaku: Int?
        /** 海外キャッシング残高 */
        var foreignCsZndk: Int?
        /** 分割払い極度 */
        var instllmtpayMax: Int?
        /** 分割払い利用可能額 */
        var instllmtpayRiyoKanoGaku: Int?
        /** 分割払い残高 */
        var instllmtpayZndk: Int?
        /** 決済日(書式：dd(02 または 17)) */
        var payDate: String?
        /** 決済口座金融機関名 */
        var payKzBnkName: String?
        /** 決済口座金融機関支店名 */
        var payKzBnkStName: String?
        /** 決済口座種目名(普通／当座／スペース) */
        var payKzItemName: String?
        /** 決済口座名義人(項目返却する場合はアスタリスクでマスク) */
        var payKzNm: String?
        /** 決済口座番号(項目返却する場合はアスタリスクでマスク) */
        var payKzNo: String?
        /** リボルビングボーナス月１(書式：mm(月)) */
        var riboBnsMon1: String?
        /** リボルビングボーナス月２(書式：mm(月)) */
        var riboBnsMon2: String?
        /** リボルビングボーナス返済額 */
        var riboBnsRepayGaku: Int?
        /** リボルビング利率(書式：ZZ9.9999) */
        var riboIntrt: Int?
        /** リボルビング極度 */
        var riboMax: Int?
        /** リボルビンク返済方式名称 */
        var riboRepaymtdnm: String?
        /** リボルビング利用可能額 */
        var riboRiyoKanoGaku: Int?
        /** リボルビング残高 */
        var riboZndk: Int?
        /** ショッピング極度 */
        var shopMax: Int?
        /** ショッピング利用可能額 */
        var shopRiyoKanoGaku: Int?
        /** ショッピング残高 */
        var shopZndk: Int?
    }

    /** B03 */
    struct B03 {
        /** オーソリ予約適用コード('1':（オーソリ予約適用あり）／ブランク:（オーソリ予約適用なし）) */
        var authoriReservationTekiCd: String?
        /** オーソリ予約期限(yyyymmdd) */
        var authoriReservationTrm: String?
        /** ボーナス予約限度 */
        var bnsReservationLimit: Int?
        /** キャッシング予約限度 */
        var csReservationLimit: Int?
        /** 顧客単位ボーナス利用可能額 */
        var cusBnsRiyoKanoGaku: Int?
        /** 顧客単位ボーナス利用限度額 */
        var cusBnsRiyoLmt: Int?
        /** 顧客単位ボーナス利用残高 */
        var cusBnsRiyoZndk: Int?
        /** 顧客単位カードローン利用可能額 */
        var cusClRiyoKanoGaku: Int?
        /** 顧客単位カードローン利用限度額 */
        var cusClRiyoLmt: Int?
        /** 顧客単位カードローン利用残高 */
        var cusClRiyoZndk: Int?
        /** 顧客単位キャッシング利用可能額 */
        var cusCsRiyoKanoGaku: Int?
        /** 顧客単位キャッシング利用限度額 */
        var cusCsRiyoLmt: Int?
        /** 顧客単位キャッシング利用残高 */
        var cusCsRiyoZndk: Int?
        /** 顧客単位海外キャッシング利用可能額 */
        var cusForeignCsRiyoKanoGaku: Int?
        /** 顧客単位海外キャッシング利用限度額 */
        var cusForeignCsRiyoLmt: Int?
        /** 顧客単位海外キャッシング利用残高 */
        var cusForeignCsRiyoZndk: Int?
        /** 顧客単位分割払い利用可能額 */
        var cusInstllmtpayRiyoKanoGaku: Int?
        /** 顧客単位分割払い利用限度額 */
        var cusInstllmtpayRiyoLmt: Int?
        /** 顧客単位分割払い利用残高 */
        var cusInstllmtpayRiyoZndk: Int?
        /** 顧客単位リボルビング利用可能額 */
        var cusRiboRiyoKanoGaku: Int?
        /** 顧客単位リボルビング利用限度額 */
        var cusRiboRiyoLmt: Int?
        /** 顧客単位リボルビング利用残高 */
        var cusRiboRiyoZndk: Int?
        /** 顧客単位ショッピング利用可能額 */
        var cusShopRiyoKanoGaku: Int?
        /** 顧客単位ショッピング利用限度額 */
        var cusShopRiyoLmt: Int?
        /** 顧客単位ショッピング利用残高 */
        var cusShopRiyoZndk: Int?
        /** 海外キャッシング予約限度 */
        var foreignCsReservationLimit: Int?
        /** 分割払い予約限度 */
        var instllmtpayReservationLimit: Int?
        /** リボ予約限度 */
        var riboReservationLimit: Int?
        /** ショッピング予約限度 */
        var shopReservationLimit: Int?
    }

    // sourcery:inline:auto:GetMallCardsContract.AutoInit
    // swiftlint:disable all
    // swiftformat:disable all
    internal init(b01: B01? = nil, b02: [B02]? = nil, b03: B03? = nil, message: String? = nil, result: String? = nil) {
        self.b01 = b01
        self.b02 = b02
        self.b03 = b03
        self.message = message
        self.result = result
    }
    // sourcery:end
}
